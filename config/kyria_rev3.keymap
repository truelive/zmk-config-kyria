/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&led_strip {
    chain-length = <31>;// Uncomment if using both per-key and underglow LEDs
};

/ {
    behaviors {
        mt_tap_pref: mt_tap_pref {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TAP_PREF";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
        l_paren_brk: l_paren_brk {
            compatible = "zmk,behavior-tap-dance";
            label = "L_PAREN_BRK";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>;
        };
        r_paren_brk: r_paren_brk {
            compatible = "zmk,behavior-tap-dance";
            label = "R_PAREN_BRK";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            // |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
            // |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
            //                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |

            bindings = <
   &kp ESC           &kp Q           &kp W        &kp E           &kp R      &kp T                                                            &kp Y        &kp U        &kp I             &kp O               &kp P  &kp LEFT_BRACKET
   &kp TAB  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D     &mt LSHFT F      &kp G                                                            &kp H  &mt RSHFT J  &mt RCTRL K        &mt RALT L  &mt RIGHT_GUI SEMI           &kp SQT
&kp LSHIFT           &kp Z           &kp X        &kp C           &kp V      &kp B        &kp LC(A)  &kp LC(C)    &kp LC(V)    &kp LC(X)      &kp N        &kp M    &kp COMMA           &kp DOT            &kp FSLH      &kp QUESTION
                                     &none               &lt 7 LEFT_WIN  &lt 6 DEL  &lt 5 BACKSPACE  &lt 2 ESC  &lt 1 ENTER  &lt 3 SPACE  &lt 4 TAB     &kp LALT               &kp LS(LEFT_ALT)
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols {
            bindings = <
&none  &kp LEFT_BRACE    &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE                              &none      &none      &none     &none     &none  &none
&none       &kp COLON       &kp DOLLAR   &kp PERCENT             &kp CARET         &kp PLUS                              &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none       &kp TILDE  &kp EXCLAMATION        &kp AT              &kp HASH         &kp PIPE  &none  &none  &none  &none  &none      &none      &none     &none     &none  &none
                                 &none                               &none            &none  &none  &none  &none  &none  &none      &none                &none
            >;
        };

        numbers {
            bindings = <
&none     &none     &none      &none      &none  &none                                         &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                                                 &kp SEMI  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6          &kp EQUAL  &none
&none     &none     &none      &none      &none  &none  &none  &none      &none         &none         &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp BACKSLASH  &none
                    &none                 &none  &none  &none  &none  &kp MINUS  &kp NUMBER_0         &kp COMMA    &kp PERIOD                       &none
            >;
        };

        function {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9      &kp PRINTSCREEN                                      &trans      &trans     &trans    &trans        &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6       &kp SCROLLLOCK                                      &trans  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LEFT_GUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3      &kp PAUSE_BREAK     &trans   &trans  &trans  &trans  &trans      &trans     &trans    &trans        &trans  &trans
                 &trans          &trans  &kp C_AC_PROPERTIES  &kp SPACE  &kp TAB  &trans  &trans  &trans      &trans               &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                   &none   &none  &none   &none  &none  &trans
&trans   &none   &none   &none   &none  &trans                                  &trans   &none  &none   &none  &none  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &none  &none   &none  &none  &trans
                &trans          &trans  &trans  &trans  &trans   &none   &none   &none  &trans         &trans
            >;
        };

        navigation {
            bindings = <
&trans        &trans    &trans     &trans      &trans  &trans                                                &kp K_REDO     &kp K_PASTE    &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans                                            &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT    &kp CAPS  &trans
&trans        &trans    &trans     &trans      &trans  &trans  &trans  &trans     &trans         &trans        &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP    &kp END     &kp INS  &trans
                        &trans                 &trans  &trans  &trans  &trans  &kp ENTER  &kp BACKSPACE      &kp DELETE          &trans                   &trans
            >;
        };

        media {
            bindings = <
&none         &none     &none      &none       &none  &none                                                    &none         &none         &none         &none         &none  &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &none                                                    &none         &none         &none         &none         &none  &none
&none         &none     &none      &none       &none  &none  &none  &none  &none              &none       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
                        &none                  &none  &none  &none  &none  &none  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp C_MUTE                       &none
            >;
        };

        action_buttons {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };
    };
};
